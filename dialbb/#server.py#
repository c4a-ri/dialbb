import uvicorn
from typing import Optional
from fastapi import FastAPI
from pydantic import BaseModel

import argparse

class Item(BaseModel):
    initial: bool
    sessionId: Optional[str] = ""
    userUtterance: Optional[str] = ""
    userStatus: Optional[dict] = {}
    timestamp: Optional[str] = ""

app = FastAPI()

@app.get('/') 
async def hello():
    return {"text": "hello world!"}

@app.post("/dialog/")
async def create_item(item: Item):
    user_input = {"sessionId": item.sessionId, "initial": item.initial,
                  "userUtterance": item.userUtterance, "userStatus": item.userStatus,
                  "timestamp": item.timestamp}
    print(user_input)
    system_output = aiml_system.respond(user_input)
    return system_output

if __name__ == '__main__':

    parser = argparse.ArgumentParser()
    parser.add_argument("--config", help="config yaml file", required=True") # list of payload jsons
    parser.add_argument("--port", help="port number", default=8080) # list of payload jsons
    args = parser.parse_args()
    dialogue = Dialogue(

    port = int(args.port)
    uvicorn.run(app, host="0.0.0.0", port=port)

